[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "blogs/2024-12-04-thomas-fire-analysis/index.html",
    "href": "blogs/2024-12-04-thomas-fire-analysis/index.html",
    "title": "A Brief Analysis of the 2017 Thomas Fire",
    "section": "",
    "text": "Photo courtesy of Climate Signals [2021]\nThe 2017 Thomas Fire started on December 4, 2017 and was not finally declared extinguished until January 12, 2018. It burned 281,893 acres of Santa Barbara and Ventura county, destroyed 1,063 structures, and resulted in the deaths of 1 civilian and 1 firefighter. The fire had far reaching impacts on the surrounding communities both during and after the fire eventually burned out. This analysis attempts to demonstrate the far reaching impacts of the blaze by using Python to visualize the fire’s burn scar, and how air quality was affected before, during, and after the fire.\nMore information about this anlysis, the code behind it, and data files can be found on github."
  },
  {
    "objectID": "blogs/2024-12-04-thomas-fire-analysis/index.html#learning-objectives",
    "href": "blogs/2024-12-04-thomas-fire-analysis/index.html#learning-objectives",
    "title": "A Brief Analysis of the 2017 Thomas Fire",
    "section": "Learning Objectives",
    "text": "Learning Objectives\n\nManipulating raster data with rioxarray\nManipulating vector data with geopandas\nManipluating data to create accurate and appealing visulizations with matplotlib.pyplot\nCreating an effective and efficent workflow"
  },
  {
    "objectID": "blogs/2024-12-04-thomas-fire-analysis/index.html#about-the-data",
    "href": "blogs/2024-12-04-thomas-fire-analysis/index.html#about-the-data",
    "title": "A Brief Analysis of the 2017 Thomas Fire",
    "section": "About the Data",
    "text": "About the Data\nHistoric California Fires GeoDatabase: This dataset includes information about all recorded wildifires within the state of California that, according to CalFire, burn “≥10 acres timber, ≥50 acres brush, ≥300 acres grass, damages or destroys three or more structures or does $300,000 worth of damage, or results in loss of life.”. Accessed: November 21, 2024\nLandsat Data: A simplified collection of bands (red, green, blue, near-infrared and shortwave infrared) from the Landsat Collection 2 Level-2 atmosperically corrected surface reflectance data, collected by the Landsat 8 satellite. Accessed: November 21, 2024\nAir Quality Index (AQI) Data: Air quality index data from the US Environmental Protection Agency (EPA)."
  },
  {
    "objectID": "blogs/2024-12-04-thomas-fire-analysis/index.html#import-libraries",
    "href": "blogs/2024-12-04-thomas-fire-analysis/index.html#import-libraries",
    "title": "A Brief Analysis of the 2017 Thomas Fire",
    "section": "Import Libraries",
    "text": "Import Libraries\nYou will need to begin your analysis by loading relevant Python packages.\n\n# Load libraries\nimport os \nimport matplotlib.pyplot as plt\nimport geopandas as gpd\nimport pandas as pd\nimport rioxarray as rioxr"
  },
  {
    "objectID": "blogs/2024-12-04-thomas-fire-analysis/index.html#load-data",
    "href": "blogs/2024-12-04-thomas-fire-analysis/index.html#load-data",
    "title": "A Brief Analysis of the 2017 Thomas Fire",
    "section": "Load Data",
    "text": "Load Data\n\nThomas Fire Boundary\nThe perimeter of the Thomas Fire was aquired by filtering the Historic California Fires GeoDatabase by year (2017) and fire name (Thomas). This code can be found at the github repository linked above.\n\n# Load Thomas Fire boundary data\nthomas_fire = gpd.read_file(os.path.join('data', 'thomas_fire.shp'))\n\n\n\nLandsat Data\nThe landsat data used for this analysis was pre-cleaned by our course instructor to include only the Santa Barbara and Ventura County areas.\n\n# Load landsat data\nlandsat = rioxr.open_rasterio(os.path.join('data', 'landsat8-2018-01-26-sb-simplified.nc'))\n\n\n# Display landsat contents\nlandsat\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;xarray.Dataset&gt;\nDimensions:      (y: 731, x: 870, band: 1)\nCoordinates:\n  * y            (y) float64 3.952e+06 3.952e+06 ... 3.756e+06 3.755e+06\n  * x            (x) float64 1.213e+05 1.216e+05 ... 3.557e+05 3.559e+05\n  * band         (band) int64 1\n    spatial_ref  int64 0\nData variables:\n    red          (band, y, x) float64 ...\n    green        (band, y, x) float64 ...\n    blue         (band, y, x) float64 ...\n    nir08        (band, y, x) float64 ...\n    swir22       (band, y, x) float64 ...xarray.DatasetDimensions:y: 731x: 870band: 1Coordinates: (4)y(y)float643.952e+06 3.952e+06 ... 3.755e+06axis :Ycrs :EPSG:32611long_name :y coordinate of projectionresolution :-30standard_name :projection_y_coordinateunits :metre_FillValue :nanarray([3952395., 3952125., 3951855., ..., 3755835., 3755565., 3755295.])x(x)float641.213e+05 1.216e+05 ... 3.559e+05axis :Xcrs :EPSG:32611long_name :x coordinate of projectionresolution :30standard_name :projection_x_coordinateunits :metre_FillValue :nanarray([121305., 121575., 121845., ..., 355395., 355665., 355935.])band(band)int641array([1])spatial_ref()int640crs_wkt :PROJCS[\"WGS 84 / UTM zone 11N\",GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563]],PRIMEM[\"Greenwich\",0],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4326\"]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"latitude_of_origin\",0],PARAMETER[\"central_meridian\",-117],PARAMETER[\"scale_factor\",0.9996],PARAMETER[\"false_easting\",500000],PARAMETER[\"false_northing\",0],UNIT[\"metre\",1],AXIS[\"Easting\",EAST],AXIS[\"Northing\",NORTH],AUTHORITY[\"EPSG\",\"32611\"]]semi_major_axis :6378137.0semi_minor_axis :6356752.314245179inverse_flattening :298.257223563reference_ellipsoid_name :WGS 84longitude_of_prime_meridian :0.0prime_meridian_name :Greenwichgeographic_crs_name :WGS 84horizontal_datum_name :World Geodetic System 1984projected_crs_name :WGS 84 / UTM zone 11Ngrid_mapping_name :transverse_mercatorlatitude_of_projection_origin :0.0longitude_of_central_meridian :-117.0false_easting :500000.0false_northing :0.0scale_factor_at_central_meridian :0.9996spatial_ref :PROJCS[\"WGS 84 / UTM zone 11N\",GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563]],PRIMEM[\"Greenwich\",0],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4326\"]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"latitude_of_origin\",0],PARAMETER[\"central_meridian\",-117],PARAMETER[\"scale_factor\",0.9996],PARAMETER[\"false_easting\",500000],PARAMETER[\"false_northing\",0],UNIT[\"metre\",1],AXIS[\"Easting\",EAST],AXIS[\"Northing\",NORTH],AUTHORITY[\"EPSG\",\"32611\"]]GeoTransform :121170.0 270.0 0.0 3952530.0 0.0 -270.0array(0)Data variables: (5)red(band, y, x)float64...add_offset :0.0coordinates :timescale_factor :1.0_FillValue :0.0[635970 values with dtype=float64]green(band, y, x)float64...add_offset :0.0coordinates :timescale_factor :1.0_FillValue :0.0[635970 values with dtype=float64]blue(band, y, x)float64...add_offset :0.0coordinates :timescale_factor :1.0_FillValue :0.0[635970 values with dtype=float64]nir08(band, y, x)float64...add_offset :0.0coordinates :timescale_factor :1.0_FillValue :0.0[635970 values with dtype=float64]swir22(band, y, x)float64...add_offset :0.0coordinates :timescale_factor :1.0_FillValue :0.0[635970 values with dtype=float64]Attributes: (0)\n\n\nThe landsat data has three dimensions (x, y, band), and five variables (red, green, blue, nir08, swir22). The band dimension contains no information and is making the dataset needlessly three dimensional. We will remove the band to make the data 2-dimensional and easier to work with.\n\n# Remove band dimension\n# Remove coordinates associated to band\nlandsat = landsat.squeeze()\nlandsat = landsat.drop_vars('band')\nprint(landsat.dims, landsat.coords)\n\nFrozen({'y': 731, 'x': 870}) Coordinates:\n  * y            (y) float64 3.952e+06 3.952e+06 ... 3.756e+06 3.755e+06\n  * x            (x) float64 1.213e+05 1.216e+05 ... 3.557e+05 3.559e+05\n    spatial_ref  int64 0"
  },
  {
    "objectID": "blogs/2024-12-04-thomas-fire-analysis/index.html#true-color-image",
    "href": "blogs/2024-12-04-thomas-fire-analysis/index.html#true-color-image",
    "title": "A Brief Analysis of the 2017 Thomas Fire",
    "section": "True Color Image",
    "text": "True Color Image\nWE will first be creating a true color image of Santa Barbara County. This means creating a map from the visible bands of light (Red, Green, and Blue), which will result in an image that is similar to what we can see with our own eyes in the real world. This can help us easily interpret large land and atmospheric features.\n\n# Plot\nfig, ax = plt.subplots(figsize=(10, 8))\n\n# Create a true color (RGB) image of Santa Barbara County\n# Select the \"red\", \"green\", and \"blue\" variables  \nlandsat[['red', 'green', 'blue']].to_array().plot.imshow()\n\n# Add title\nax.set_title(\"True Color Image of Santa Barbara County and Surrounding Areas\")  \n\n# Remove axes ticks\nax.set_xticks([])  \nax.set_yticks([])  \n\n# Remove axes labels\nax.set_xlabel(\"\")  \nax.set_ylabel(\"\") \n\nplt.show()\n\nClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n\n\n\n\n\n\n\n\n\nYikes! We have a white map, with no colors! Did we do something wrong?\nLets try setting the robust parameter to true and see if that helps.\n\n# Plot\nfig, ax = plt.subplots(figsize=(10, 8))\n\n# Create a true color (RGB) image of Santa Barbara County\n# Set the `robust` parameter to `True`\nlandsat[['red', 'green', 'blue']].to_array().plot.imshow(robust=True)\n\n# Add title\nax.set_title(\"True Color Image of Santa Barbara County and Surrounding Areas\")  \n\n# Remove axes ticks\nax.set_xticks([])  \nax.set_yticks([])  \n\n# Remove axes labels\nax.set_xlabel(\"\")  \nax.set_ylabel(\"\") \n\nplt.show()\n\n\n\n\n\n\n\n\nThat is much better!\nThe cloud RGB values are outliers compared to the values of the rest of the image. This causes the rest of the values to be squished when plotting which results in not being able to see anything in the resulting image. The robust parameter pulls weight away from these outliers, allowing the rest of the image to scale properly."
  },
  {
    "objectID": "blogs/2024-12-04-thomas-fire-analysis/index.html#false-color-image",
    "href": "blogs/2024-12-04-thomas-fire-analysis/index.html#false-color-image",
    "title": "A Brief Analysis of the 2017 Thomas Fire",
    "section": "False Color Image",
    "text": "False Color Image\nThe purpose of a false color image is to assign bands of light not visible to the human eye to the visible spectrum, where we can create an image that allows a burn scar to stand out amongst healthy vegetation. Using near infrared (NIR) bands of light is an excellent way to map vegetation because healthy vegeation tends to reflect higher levels of NIR bands than dead or dying vegetation. In this false color image we have assigned the shortwave infrared band to the red channel, which means bare ground and dead vegetation is going to appear as red on our map. We have assigned the NIR band to the green channel, which means healthy vegetation will appear as green on our map.\n\n# Plot\nfig, ax = plt.subplots(figsize=(10, 8))\n\n# Create a false color image of Santa Barbara County\nlandsat[['swir22', 'nir08', 'red']].to_array().plot.imshow(robust=True)\n\n# Add title\nax.set_title(\"False Color Image of Santa Barbara County and Surrounding Areas\")  \n\n# Remove axes ticks\nax.set_xticks([])  \nax.set_yticks([])  \n\n# Remove axes labels\nax.set_xlabel(\"\")  \nax.set_ylabel(\"\") \n\nplt.show()"
  },
  {
    "objectID": "blogs/2024-12-04-thomas-fire-analysis/index.html#false-color-map-of-the-2017-thomas-fire",
    "href": "blogs/2024-12-04-thomas-fire-analysis/index.html#false-color-map-of-the-2017-thomas-fire",
    "title": "A Brief Analysis of the 2017 Thomas Fire",
    "section": "False Color Map of the 2017 Thomas Fire",
    "text": "False Color Map of the 2017 Thomas Fire\nNow that we have a false color image of Santa Barbara county and the surrounding area, we need to add the boundary of the 2017 Thomas Fire to see if it lines up with what we think the false color image is telling us about where there is burned vegetation.\nBut first we must check that the CRS of the thomas fire shapefile matches the CRS of the landsat data.\n\n# Confirm the CRS of the data match\nif thomas_fire.crs == landsat.rio.crs:\n    print(\"The CRS match.\")\nelse:\n    thomas_fire = thomas_fire.to_crs(landsat.rio.crs)\n    print(\"The CRS match.\")\n\nThe CRS match.\n\n\nNow that we have confirmed the CRS match, we can add the Thomas Fire boundary to our false color image.\n\n# Plot\nfig, ax = plt.subplots(figsize=(10, 8))  \n\n# Add landsat data\nlandsat[['swir22', 'nir08', 'red']].to_array().plot.imshow(ax=ax,\n                                                           robust=True)\n\n# Add Thomas Fire Perimeter\nthomas_fire.geometry.boundary.plot(ax=ax,\n                                   color='darkred',\n                                   linewidth=1.5,\n                                   label=\"Fire Perimeter\")\n\n# Add legend\nax.legend(fontsize='small')\n\n# Add title\nax.set_title(\"False Color Image of 2017 Thomas Fire Burn Scar\")  \n\n# Remove axes ticks\nax.set_xticks([])  \nax.set_yticks([])  \n\n# Remove axes labels\nax.set_xlabel(\"\")  \nax.set_ylabel(\"\") \n\n# Add access date\nplt.figtext(0.1, 0.05, \n            \"Accessed: November 21, 2024\", \n            fontsize=8, \n            color=\"grey\")\n\nplt.show()"
  },
  {
    "objectID": "blogs/2024-12-04-thomas-fire-analysis/index.html#visualizing-aqi-during-the-2017-thomas-fire-in-santa-barbara-county",
    "href": "blogs/2024-12-04-thomas-fire-analysis/index.html#visualizing-aqi-during-the-2017-thomas-fire-in-santa-barbara-county",
    "title": "A Brief Analysis of the 2017 Thomas Fire",
    "section": "Visualizing AQI during the 2017 Thomas Fire in Santa Barbara County",
    "text": "Visualizing AQI during the 2017 Thomas Fire in Santa Barbara County\nIn the following analysis we will use Air Quality Index (AQI) from the Environmental Protection Agency (EPA) to visualize the impact on Santa Barbara County air quality by the 2017 Thomas Fire.\nWe first load the daily AQI data from 2017 and 2018 and combine the two data frames into a single dataframe. This will allow us to more easily visulaize our data. After we have combined our data frames, we can filter for Santa Barbara County and keep only the columns we need in our resulting data frame.\n\n# Read in data\naqi_17 = pd.read_csv('data/daily_aqi_by_county_2017.csv', \n                     index_col=['Date'],   # Set the index to be the `Date` column\n                     parse_dates=['Date']) # Update the `Date` column to a `pandas.datetime` object\naqi_18 = pd.read_csv('data/daily_aqi_by_county_2018.csv',\n                     index_col=['Date'],   \n                     parse_dates=['Date'])\n\n# Combine the `aqi_17` and `aqi_18` dataframes into a single dataframe\naqi = pd.concat([aqi_17, aqi_18])\n       \n# Simplify column names\naqi.columns = (aqi.columns\n                  .str.lower()\n                  .str.replace(' ','_')\n              )\n\n# Select data only from Santa Barbara County\naqi_sb = (aqi[aqi['county_name'] == 'Santa Barbara']\n          # Remove the `state_name`, `county_name`, `state_code`, and `county_code` columns\n          .drop(columns = ['state_name', 'county_name', 'state_code', 'county_code'])\n         )\n\nWe can now calculate a 5 day rolling average of our air quality data in Santa Barbara County and add it as a new column in our aqi_sb data frame.\n\n# Calculate AQI rolling average over 5 days and add to a new column\naqi_sb['five_day_average'] = aqi_sb['aqi'].rolling('5D').mean()\n\nCreate a plot of our AQI five day rolling average and the unmanipulated AQI.\n\n# Line plot \n(aqi_sb.plot(y=['aqi', 'five_day_average'],\n            title ='AQI Pre and Post the Thomas Fire in December 2017',\n            xlabel='Month, Year',\n            ylabel='Air Quality Index (AQI)',        \n            color = {'aqi':'#9ED8DB',\n                     'five_day_average': '#467599'\n                    }\n           ).legend(['AQI','Five Day Rolling Average'])\n)\n\n\n\n\n\n\n\n\nHigher AQI indicates poor air quality and we can clearly see a spike in AQI during December 2017 when the Thomas Fire was burning. The five day rolling average helps to smooth our data and eliminate the showiness of outlier AQI data points. Even with this smoothing, there is a distinguishable spike in AQI in December 2017. This figure also indicates there was not a long term impact to AQI after the Thomas Fire was extinguished."
  },
  {
    "objectID": "blogs/2024-12-04-thomas-fire-analysis/index.html#references",
    "href": "blogs/2024-12-04-thomas-fire-analysis/index.html#references",
    "title": "A Brief Analysis of the 2017 Thomas Fire",
    "section": "References",
    "text": "References\nCalFire. Updated April 2023. https://www.fire.ca.gov/what-we-do/fire-resource-assessment-program/fire-perimeters. Accessed: November 16, 2024\nLandsat Collection 2 Level-2, Microsoft Open Source, Matt McFarland, Rob Emanuele, Dan Morris, & Tom Augspurger. (2022). microsoft/PlanetaryComputer: October 2022 (2022.10.28). Zenodo. https://planetarycomputer.microsoft.com/dataset/landsat-c2-l2. Accessed: November 16, 2024\nU.S. Enivornmental Protection Agency. (2024). Air Quality Index Daily Values Report: July 2024 (2024.07.23). https://www.epa.gov/outdoor-air-quality-data/air-quality-index-daily-values-report. Accessed: October 22, 2024"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Rachel Swick",
    "section": "",
    "text": "Rachel Swick graduated from DePauw University in 2018 with a Bachelor of Arts in Environmental Biology. Upon graduation, she worked on San Clemente Island, under the direction of the United States Navy, conducting botanical restoration, mapping wildfire footprints, and verifying vegetation mapping completed using remotely sensed aerial imagery. Her time on San Clemente Island was hugely impactful, combining her love of the outdoors with conservation and botany. However, it was while working on San Clemente Island she noticed the impact of poor data management on long term project success and started exploring potential solutions. Following her time on San Clemente Island, she worked as a biologist for an environmental consulting firm. She was involved with projects covering resource management, restoration, energy, industrial development, municipal, transportation, and residential development. From these experiences, she has found value in data driven solutions and effective data management. Rachel is currently pursuing a Master of Environmental Data Science at University of California, Santa Barbara, Bren School of Environmental Science and Management. She hopes to use remote sensing and other data science tools to help communities make informed decisions on wildfire prevention and become more resilient against future climate threats.\n\nEducation"
  },
  {
    "objectID": "blogs.html",
    "href": "blogs.html",
    "title": "Blog",
    "section": "",
    "text": "A Brief Analysis of the 2017 Thomas Fire\n\n\nUsing Python to manipulate data to create visualizations of the impact of the 2017 Thomas Fire on Santa Barbara and Ventura counties\n\n\n\nRachel Swick\n\n\nDec 12, 2024\n\n\n\n\n\n\n\n\nNo matching items"
  }
]